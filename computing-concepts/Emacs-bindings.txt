C-f     Move forward a character
C-b     Move backward a character

M-f     Move forward a word
M-b     Move backward a word

C-n     Move to next line
C-p     Move to previous line

C-a     Move to beginning of line
C-e     Move to end of line

M-a     Move back to beginning of sentence
M-e     Move forward to end of sentence

M-<     Move to beginning of whole text
M->     Move to end of whole text

C-u     Repeat count
C-g     Stop command

C-x 1   Kill all other windows

<DEL>   Delete character just before the cursor
C-d     Delete next character after the cursor

M-<DEL> Kill the word immediately before the curose
M-d     Kill the next word after the cursor

C-k     Kill from the cursor position to end of line
M-k     Kill to the end of the current sentence

C-<SPC> Set Marker
C-W     Kill visual selection

C-y     Yank
M-y

C-/     Undo

C-x C-f Find a file
C-x C-s Save the file

C-x C-b List buffers
C-x s   Save some buffers
C-x b   Switch buffer
C-x C-c Quit GNU Emacs
C-x     Character eXtend
M-x     Named command eXtend

C-h m   View documentation on major mode

C-s     Invoke I-search

C-x o   Switch focused window
C-x 2   Split frame into two windows

C-h c   Help: Command bound to key
C-h k   Help: Information about command
C-h f   Help: Describe a function
C-h a   Help: Command Apropos
C-h i   Help: Read Infos
Autosave files prefixed with #

C-M-o 	Split current line at point ('split-line')
M-m 	Move to the first non-whitespace character on the current line ('back-to-indentation')
M-i	Indent whitespace at point, up to the next tab stop ('tab-to-tab-stop')
M-^ 	Merge the previous and the current line ('delete-indentation')
C-M-\ 	Indent all the lines in the region ('indent-region')
M-x untabify   Change all tabs in the region to spacesx

C-x C-f Visit a file ('find-file')
C-x C-r Visit a file only for viewing; kills current buffer ('find-file-read-only') 
C-x C-v Visit a different file instead of the one visited last ('find-alternate-file')
C-x 4 f Visit a file in another window ('find-file-other-window')
C-x 5 f Visit a file, in a new frame ('find-file-other-frame')
M-x find-file-literally Visit a file with no conversion of the contentsx

C-x C-q Make buffer writable ('read-only-mode')

C-x C-s Save the current buffer to its file ('save-buffer')
C-x s   Save any or all buffers to their files ('save-some-buffers')
M-~ 	Forget that the current buffer has been changed ('not-modified')
C-x C-w Save the current buffer with a specified file name ('write-file')
M-x set-visited-file-name Change the file name under which the current buffer will be saved.

C-x s y|<SPC> Save this buffer and ask about the rest of the buffers.
C-x s n|<DEL> Don't save this buffer, but ask about the rest of the buffers.
C-x s !       Save this buffer and all the rest with no more questions.
C-x s q|<RET> Terminate 'save-save-buffers' without any more saving.
C-x s .       Save this buffer, then exit 'save-some-buffers' without even asking about other buffers.
C-x s C-r     View the buffer that you are currently being asked about. When you exit View mode, you get back to 'save-some-buffers', which asks the question again.
C-x s C-f     Exit 'save-some-buffers' and visit the buffer that you are currently being asked about.
C-x s d       Diff the buffer against its corresponding file, so you can see what changes you would be saving. This calls the command 'diff-buffer-with-file'.
C-x s C-h display a help message about these options.

Backup files are appended with '~'.

M-x revert-buffer Reverts changes in buffer
M-x auto-revert-mode Automatically reverts the buffer when its visited file changes on disk.

C-x C-d DIR-OR-PATTERN <RET> 	   Display a brief driectory listing ('list-directory')
C-u C-x C-d DIR-OR-PATTERN <RET>   Display a verbose directory listing
M-x make-directory <RET> DIRNAME <RET> Create a new directory named DIRNAME
M-x delete-directory <RET> DIRNAME <RET> Delete the directory DIRNAME.
M-x diff
M-x diff-backup
M-x diff-buffer-with-file
M-x diff-buffers
M-x compare-windows

Diff Mode

M-n  Move to the next hunk start ('diff-hunk-next')
M-p  Move to the previous hunk-start ('diff-hunk-prev')
M-}  Move to the next file-start, in a multi-file patch ('diff-file-next')
M-{  Move to the previous file-start, in a multi-file patch ('diff-file-prev')
M-k  Kill the hunk at point ('diff-hunk-kill')
M-K  In a multi-file patch, kill the current file part ('diff-file-kill')
C-c C-a Apply this hunk to its target file ('diff-apply-hunk'). With a prefix argument of 'C-u', revert this hunk.
C-c C-b Hilight the changes of the hunk at point with a finer granularity ('diff-refine-hunk')
C-c C-c Go to the source file and line corresponding to this hunk ('diff-goto-source')
C-c C-e Start an Ediff session with the patch ('diff-ediff-patch')
C-c C-n Restrict the view to the current hunk ('diff-restrict-view') To widen, C-x n w ('widen')
C-c C-r Reverse the direction of comparison for the entire buffer ('diff-reverse-direction')
C-c C-s Split the hunk at point ('diff-split-hunk') into two separate hunks. ('diff-split-hunk')
C-c C-d Conver the entire buffer to the "context diff format" ('diff-unified->context')
C-c C-u Convert the entire buffer to the unified diff formwar ('diff-context->unified')
C-c C-w Re-generate the current hunk, disregarding changed in whitespace ('diff-ignore-whitespace-hunk')
C-x 4 A Generate a ChangeLog entry for each one of the hunks ('diff-add-change-log-entries-other-window')

M-x diff-delete-trailing-whitespace
M-x rename-file
M-x copy-file
M-x copy-directory
M-x add-name-to-file Creates hard link
M-x make-symbolic-link Creates a symbolic link named NEW, which points at TARGET
M-x delete-file Prompts for a file and delete it
M-x move-file-to-trash Moves a file into system "Trash"
M-x insert-file Insert a copy of the contents of the specified file into the current buffer at point
M-x insert-file-literally File is inserted literally
M-x write-region Copies contents of region into specified file
M-x set-file-modes

M-x file-cache-add-directory <RET> DIRECTORY <RET>	Add each file name in DIRECTORY to the file name cache
M-x file-cache-add-directory-using-find <RET> DIRECTORY <RET> 	 Add each file name in DIRECTORY and all of its nested subdirectories to the file name cache,
M-x file-cache-add-directory-using-locate <RET> DIRECTORY <RET>  Add each file name in DIRECTORY and all of its nested subdirectories to the file name cache, using 'locate' to find them all.
M-x file-cache-add-directory-list <RET> VARIABLE <RET>	  Add each file name in each directory listed in VARIABLE to the file name cache.
M-x file-cache-clear-cache <RET>  	Clear the cache; that is. remove all the file names from it.

M-x recentf-mode
